parameters:
    systemEmail: jn475@bath.ac.uk
    baseDir: /var/www/www

application:
	errorPresenter: Error
	mapping:
		*: App\*Module\Presenters\*Presenter
recaptcha:
	siteKey: %recaptchaSiteKey%
	secretKey: %recaptchaSecretKey%

extensions:
	nextras.form: Nextras\Forms\Bridges\NetteDI\FormsExtension
	orm: Nextras\Orm\Bridges\NetteDI\OrmExtension
	dbal: Nextras\Dbal\Bridges\NetteDI\DbalExtension
	console: Kdyby\Console\DI\ConsoleExtension
	recaptcha: Contributte\ReCaptcha\DI\ReCaptchaExtension
	rabbitmq: Gamee\RabbitMQ\DI\RabbitMQExtension

rabbitmq:
	connections:
		default:
			user: guest
			password: guest
			host: 185.8.239.18
			port: 5672

	exchanges:
		messages_exchange:
			connection: default
			type: topic
			# force exchange declare on first exchange operation during request
			autoCreate: true

	producers:
		messagesProducer:
			exchange: messages_exchange
			# queue: testQueue
			contentType: application/json
			deliveryMode: 2 # Producer::DELIVERY_MODE_PERSISTENT


mail:
    smtp: false
    host:
    port:
    secure: SSL
    username:
    password:
latte:
    macros:

orm:
	model: App\Services\OrmService

session:
	expiration: 14 days


services:
	mailerService:
		class: App\Services\MailService
		setup:
			- setSystemEmail(%systemEmail%)
	router: App\RouterFactory::createRouter
	authenticator: App\Services\Authenticator
	- App\Components\SignIn\ISignInComponentFactory
	- App\Components\Queues\IQueueEditFormFactory
	- App\Components\Queues\IDeviceEditFormFactory
	- App\Components\Messages\ISendMessageFormFactory
	- App\Services\QueueService(@App\Repositories\QueuesRepository, @Gamee\RabbitMQ\Client::getProducer(messagesProducer))